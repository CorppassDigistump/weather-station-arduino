@inject IHtmlLocalizer<SharedLocalizer> Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    ViewData["Title"] = Localizer["Home"];
}

@{ 
    Weather latestData = (Weather)ViewData["LatestData"];
    List<Weather> hoursData = (List<Weather>)ViewData["HoursData"];
}

<style type="text/css">
    table {
        border-collapse: collapse;
    }

    table, td {
        border: 1px solid black;
    }

    td {
        padding: 5px;
    }

    h1 {
        display: inline-block;
    }

    small {
        color: #888888;
        display: inline-block;
        margin-left: 10px;

    }
</style>

<script src="https://cdn.bootcss.com/echarts/4.1.0-release/echarts.min.js"></script>

<div style="margin: 25px">
    <div>
        @{
            var requestCulture = Context.Features.Get<IRequestCultureFeature>();
            var cultureItems = LocOptions.Value.SupportedUICultures
                .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName, Selected = LocOptions.Value.DefaultRequestCulture.UICulture.Name == c.Name })
                .ToList();
            var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
        }

        <div>
            <form asp-controller="Weather" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl" method="post" role="form">
                <select class="language-select" name="culture" onchange="this.form.submit();" asp-for="@requestCulture.RequestCulture.UICulture.Name" asp-items="cultureItems"></select>
            </form>
        </div>
    </div>

    <div>
        <h1>@Localizer["Introduction"]</h1>
        <div>
            <div>@Localizer["I1"]</div>
            <ul>
                <li>@Localizer["I21"]</li>
                <li>@Localizer["I22"]</li>
                <li>@Localizer["I23"]</li>
                <li>@Localizer["I24"]</li>
                <li>@Localizer["I25"]</li>
                <li>@Localizer["I26"]</li>
                <li>@Localizer["I27"]</li>
                <li>@Localizer["I28"]</li>
                <li>@Localizer["I29"]</li>
                <li>@Localizer["I210"]</li>
            </ul>
            <p>@Localizer["I3"]</p>
            <p>@Localizer["I4"]</p>
            <p>GitHub: <a href="https://github.com/ZhangGaoxing/weather-station-arduino" target="_blank">https://github.com/ZhangGaoxing/weather-station-arduino</a></p>
        </div>
    </div>

    <div>
        <h1>@Localizer["LatestData"]</h1>
        <small>@Localizer["LatestDataSmall"]</small>

        <table>
            <tbody>
                <tr>
                    <td><b>@Localizer["Time"]</b></td>
                    <td>@latestData.DateTime.ToString("yyyy/MM/dd HH:mm")</td>
                </tr>
                <tr>
                    <td><b>@Localizer["Temperature"]</b></td>
                    <td>@latestData.Temperature ℃</td>
                </tr>
                <tr>
                    <td><b>@Localizer["Humidity"]</b></td>
                    <td>@latestData.Humidity %</td>
                </tr>
                <tr>
                    <td><b>@Localizer["Pressure"]</b></td>
                    <td>@latestData.Pressure Pa</td>
                </tr>
                <tr>
                    <td><b>@Localizer["Dust"]</b></td>
                    <td>@latestData.Dust mg/m³</td>
                </tr>
                <tr>
                    <td><b>@Localizer["UV"]</b></td>
                    <td>@latestData.UV mW/cm²</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div>
        <h1>@Localizer["6HourData"]</h1>
        <small>@Localizer["6HourDataSmall"]</small>

        <div>
            <div id="temp" style="width: 700px;height:400px;float:left"></div>
            <div id="humi" style="width: 700px;height:400px;float:left"></div>
            <div id="press" style="width: 700px;height:400px;float:left"></div>
            <div id="dust" style="width: 700px;height:400px;float:left"></div>
            <div id="uv" style="width: 700px;height:400px;float:left"></div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var temp = echarts.init(document.getElementById('temp'));
    var tempOpt = {
        title: {
            text: '@Localizer["Temperature"]'
        },
        tooltip: {},
        legend: {
            data: ['@Localizer["Temperature"]']
        },
        xAxis: {
            name: '@Localizer["Time"]',
            data: ["@hoursData[0].DateTime.ToString("MM/dd HH:mm")", "@hoursData[1].DateTime.ToString("MM/dd HH:mm")", "@hoursData[2].DateTime.ToString("MM/dd HH:mm")", "@hoursData[3].DateTime.ToString("MM/dd HH:mm")", "@hoursData[4].DateTime.ToString("MM/dd HH:mm")", "@hoursData[5].DateTime.ToString("MM/dd HH:mm")"]
        },
        yAxis: {
            name: '@Localizer["Temperature"] (℃)'
        },
        series: [{
            name: '@Localizer["Temp"] (℃)',
            type: 'line',
            smooth: true,
            itemStyle: {
                normal: {
                    color: '#c23531',  //圈圈的颜色
                    lineStyle: {
                        color: '#c23531'  //线的颜色
                    }
                }
            },
            data: [@hoursData[0].Temperature, @hoursData[1].Temperature, @hoursData[2].Temperature, @hoursData[3].Temperature, @hoursData[4].Temperature, @hoursData[5].Temperature]
        }]
    };
    temp.setOption(tempOpt);

    var humi = echarts.init(document.getElementById('humi'));
    var humiOpt = {
        title: {
            text: '@Localizer["Humidity"]'
        },
        tooltip: {},
        legend: {
            data: ['@Localizer["Humidity"]']
        },
        xAxis: {
            name: '@Localizer["Time"]',
            data: ["@hoursData[0].DateTime.ToString("MM/dd HH:mm")", "@hoursData[1].DateTime.ToString("MM/dd HH:mm")", "@hoursData[2].DateTime.ToString("MM/dd HH:mm")", "@hoursData[3].DateTime.ToString("MM/dd HH:mm")", "@hoursData[4].DateTime.ToString("MM/dd HH:mm")", "@hoursData[5].DateTime.ToString("MM/dd HH:mm")"]
        },
        yAxis: {
            name: '@Localizer["Humidity"] (%)'
        },
        series: [{
            name: '@Localizer["Humidity"] (%)',
            type: 'line',
            smooth: true,
            itemStyle: {
                normal: {
                    color: '#2f4554',
                    lineStyle: {
                        color: '#2f4554'
                    }
                }
            },
            data: [@hoursData[0].Humidity, @hoursData[1].Humidity, @hoursData[2].Humidity, @hoursData[3].Humidity, @hoursData[4].Humidity, @hoursData[5].Humidity]
        }]
    };
    humi.setOption(humiOpt);

    var press = echarts.init(document.getElementById('press'));
    var pressOpt = {
        title: {
            text: '@Localizer["Pressure"]'
        },
        tooltip: {},
        legend: {
            data: ['@Localizer["Pressure"]']
        },
        xAxis: {
            name: '@Localizer["Time"]',
            data: ["@hoursData[0].DateTime.ToString("MM/dd HH:mm")", "@hoursData[1].DateTime.ToString("MM/dd HH:mm")", "@hoursData[2].DateTime.ToString("MM/dd HH:mm")", "@hoursData[3].DateTime.ToString("MM/dd HH:mm")", "@hoursData[4].DateTime.ToString("MM/dd HH:mm")", "@hoursData[5].DateTime.ToString("MM/dd HH:mm")"]
        },
        yAxis: {
            name: '@Localizer["Pressure"] (Pa)',
            min: function(value) {
                return parseInt(value.min) - 100;
            }
        },
        series: [{
            name: '@Localizer["Pressure"] (Pa)',
            type: 'line',
            smooth: true,
            itemStyle: {
                normal: {
                    color: '#61a0a8',
                    lineStyle: {
                        color: '#61a0a8'
                    }
                }
            },
            data: [@hoursData[0].Pressure, @hoursData[1].Pressure, @hoursData[2].Pressure, @hoursData[3].Pressure, @hoursData[4].Pressure, @hoursData[5].Pressure]
        }]
    };
    press.setOption(pressOpt);

    var dust = echarts.init(document.getElementById('dust'));
    var dustOpt = {
        title: {
            text: '@Localizer["Dust"]'
        },
        tooltip: {},
        legend: {
            data: ['@Localizer["Dust"]']
        },
        xAxis: {
            name: '@Localizer["Time"]',
            data: ["@hoursData[0].DateTime.ToString("MM/dd HH:mm")", "@hoursData[1].DateTime.ToString("MM/dd HH:mm")", "@hoursData[2].DateTime.ToString("MM/dd HH:mm")", "@hoursData[3].DateTime.ToString("MM/dd HH:mm")", "@hoursData[4].DateTime.ToString("MM/dd HH:mm")", "@hoursData[5].DateTime.ToString("MM/dd HH:mm")"]
        },
        yAxis: {
            name: '@Localizer["Dust"] (mg/m³)'
        },
        series: [{
            name: '@Localizer["Dust"] (mg/m³)',
            type: 'line',
            smooth: true,
            itemStyle: {
                normal: {
                    color: '#d48265',
                    lineStyle: {
                        color: '#d48265'
                    }
                }
            },
            data: [@hoursData[0].Dust, @hoursData[1].Dust, @hoursData[2].Dust, @hoursData[3].Dust, @hoursData[4].Dust, @hoursData[5].Dust]
        }]
    };
    dust.setOption(dustOpt);

    var uv = echarts.init(document.getElementById('uv'));
    var uvOpt = {
        title: {
            text: '@Localizer["UV"]'
        },
        tooltip: {},
        legend: {
            data: ['@Localizer["UV"]']
        },
        xAxis: {
            name: '@Localizer["Time"]',
            data: ["@hoursData[0].DateTime.ToString("MM/dd HH:mm")", "@hoursData[1].DateTime.ToString("MM/dd HH:mm")", "@hoursData[2].DateTime.ToString("MM/dd HH:mm")", "@hoursData[3].DateTime.ToString("MM/dd HH:mm")", "@hoursData[4].DateTime.ToString("MM/dd HH:mm")", "@hoursData[5].DateTime.ToString("MM/dd HH:mm")"]
        },
        yAxis: {
            name: '@Localizer["UV"] (mW/cm²)'
        },
        series: [{
            name: '@Localizer["UV"] (mW/cm²)',
            type: 'line',
            smooth: true,
            itemStyle: {
                normal: {
                    color: '#91c7ae',
                    lineStyle: {
                        color: '#91c7ae'
                    }
                }
            },
            data: [@hoursData[0].UV, @hoursData[1].UV, @hoursData[2].UV, @hoursData[3].UV, @hoursData[4].UV, @hoursData[5].UV]
        }]
    };
    uv.setOption(uvOpt);
</script>